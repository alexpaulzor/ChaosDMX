#############################################################################
# Makefile for building: libqlcengine.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.7.0) on: Sun Dec 12 05:53:40 2010
# Project:  src.pro
# Template: lib
# Command: /usr/bin/qmake -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_XML_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -march=x86-64 -mtune=generic -O2 -pipe -D_REENTRANT -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -m64 -pipe -Werror -march=x86-64 -mtune=generic -O2 -pipe -D_REENTRANT -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtXml -I/usr/include -I../../plugins/interfaces -I.
LINK          = g++
LFLAGS        = -m64 -Wl,--hash-style=gnu -Wl,--as-needed -Wl,-O1 -shared -Wl,-soname,libqlcengine.so.1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtXml -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = qlccapability.cpp \
		qlcchannel.cpp \
		qlcfile.cpp \
		qlcfixturedef.cpp \
		qlcfixturedefcache.cpp \
		qlcfixturemode.cpp \
		qlci18n.cpp \
		qlcinputchannel.cpp \
		qlcinputprofile.cpp \
		qlcphysical.cpp \
		bus.cpp \
		chaser.cpp \
		chaserrunner.cpp \
		collection.cpp \
		doc.cpp \
		efx.cpp \
		efxfixture.cpp \
		fadechannel.cpp \
		fixture.cpp \
		function.cpp \
		inputmap.cpp \
		inputpatch.cpp \
		intensitygenerator.cpp \
		mastertimer.cpp \
		universearray.cpp \
		outputmap.cpp \
		outputpatch.cpp \
		palettegenerator.cpp \
		scene.cpp \
		scenevalue.cpp moc_bus.cpp \
		moc_chaser.cpp \
		moc_chaserrunner.cpp \
		moc_collection.cpp \
		moc_doc.cpp \
		moc_efx.cpp \
		moc_fixture.cpp \
		moc_function.cpp \
		moc_inputmap.cpp \
		moc_inputpatch.cpp \
		moc_mastertimer.cpp \
		moc_outputmap.cpp \
		moc_outputpatch.cpp \
		moc_scene.cpp \
		moc_qlcinplugin.cpp \
		moc_qlcoutplugin.cpp
OBJECTS       = qlccapability.o \
		qlcchannel.o \
		qlcfile.o \
		qlcfixturedef.o \
		qlcfixturedefcache.o \
		qlcfixturemode.o \
		qlci18n.o \
		qlcinputchannel.o \
		qlcinputprofile.o \
		qlcphysical.o \
		bus.o \
		chaser.o \
		chaserrunner.o \
		collection.o \
		doc.o \
		efx.o \
		efxfixture.o \
		fadechannel.o \
		fixture.o \
		function.o \
		inputmap.o \
		inputpatch.o \
		intensitygenerator.o \
		mastertimer.o \
		universearray.o \
		outputmap.o \
		outputpatch.o \
		palettegenerator.o \
		scene.o \
		scenevalue.o \
		moc_bus.o \
		moc_chaser.o \
		moc_chaserrunner.o \
		moc_collection.o \
		moc_doc.o \
		moc_efx.o \
		moc_fixture.o \
		moc_function.o \
		moc_inputmap.o \
		moc_inputpatch.o \
		moc_mastertimer.o \
		moc_outputmap.o \
		moc_outputpatch.o \
		moc_scene.o \
		moc_qlcinplugin.o \
		moc_qlcoutplugin.o
DIST          = /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		../../variables.pri \
		../../coverage.pri \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		src.pro
QMAKE_TARGET  = qlcengine
DESTDIR       = 
TARGET        = libqlcengine.so.1.0.0
TARGETA       = libqlcengine.a
TARGETD       = libqlcengine.so.1.0.0
TARGET0       = libqlcengine.so
TARGET1       = libqlcengine.so.1
TARGET2       = libqlcengine.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  $(TARGET)

$(TARGET): qlcconfig.h $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA): qlcconfig.h $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: src.pro  /usr/share/qt/mkspecs/linux-g++-64/qmake.conf /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		../../variables.pri \
		../../coverage.pri \
		/usr/share/qt/mkspecs/features/release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile src.pro
/usr/share/qt/mkspecs/common/g++.conf:
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
../../variables.pri:
../../coverage.pri:
/usr/share/qt/mkspecs/features/release.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtXml.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile src.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/qlcengine1.0.0 || $(MKDIR) .tmp/qlcengine1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/qlcengine1.0.0/ && $(COPY_FILE) --parents qlccapability.h qlcchannel.h qlcfile.h qlcfixturedef.h qlcfixturedefcache.h qlcfixturemode.h qlci18n.h qlcinputchannel.h qlcinputprofile.h qlcphysical.h bus.h chaser.h chaserrunner.h collection.h doc.h efx.h efxfixture.h fadechannel.h fixture.h function.h inputmap.h inputpatch.h intensitygenerator.h mastertimer.h universearray.h outputmap.h outputpatch.h palettegenerator.h scene.h scenevalue.h ../../plugins/interfaces/qlcinplugin.h ../../plugins/interfaces/qlcoutplugin.h .tmp/qlcengine1.0.0/ && $(COPY_FILE) --parents qlccapability.cpp qlcchannel.cpp qlcfile.cpp qlcfixturedef.cpp qlcfixturedefcache.cpp qlcfixturemode.cpp qlci18n.cpp qlcinputchannel.cpp qlcinputprofile.cpp qlcphysical.cpp bus.cpp chaser.cpp chaserrunner.cpp collection.cpp doc.cpp efx.cpp efxfixture.cpp fadechannel.cpp fixture.cpp function.cpp inputmap.cpp inputpatch.cpp intensitygenerator.cpp mastertimer.cpp universearray.cpp outputmap.cpp outputpatch.cpp palettegenerator.cpp scene.cpp scenevalue.cpp .tmp/qlcengine1.0.0/ && (cd `dirname .tmp/qlcengine1.0.0` && $(TAR) qlcengine1.0.0.tar qlcengine1.0.0 && $(COMPRESS) qlcengine1.0.0.tar) && $(MOVE) `dirname .tmp/qlcengine1.0.0`/qlcengine1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/qlcengine1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) qlcconfig.h
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	-$(DEL_FILE) qlcconfig.h
	-$(DEL_FILE) Makefile


qlcconfig.h:
	echo "# ifndef CONFIG_H" > qlcconfig.h && echo "# define CONFIG_H" >> qlcconfig.h && echo "# define APPNAME \"Q Light Controller\"" >> qlcconfig.h && echo "# define FXEDNAME \"Fixture Definition Editor\"" >> qlcconfig.h && echo "# define APPVERSION \"3.1.0\"" >> qlcconfig.h && echo "# define DOCSDIR \"/usr/share/qlc/documents\"" >> qlcconfig.h && echo "# define INPUTPROFILEDIR \"/usr/share/qlc/inputprofiles\"" >> qlcconfig.h && echo "# define USERINPUTPROFILEDIR \".qlc/inputprofiles\"" >> qlcconfig.h && echo "# define FIXTUREDIR \"/usr/share/qlc/fixtures\"" >> qlcconfig.h && echo "# define USERFIXTUREDIR \".qlc/fixtures\"" >> qlcconfig.h && echo "# define INPUTPLUGINDIR \"/usr/lib/qt4/plugins/qlc/input\"" >> qlcconfig.h && echo "# define OUTPUTPLUGINDIR \"/usr/lib/qt4/plugins/qlc/output\"" >> qlcconfig.h && echo "# define TRANSLATIONDIR \"/usr/share/qlc/translations\"" >> qlcconfig.h && echo "# endif" >> qlcconfig.h

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_bus.cpp moc_chaser.cpp moc_chaserrunner.cpp moc_collection.cpp moc_doc.cpp moc_efx.cpp moc_fixture.cpp moc_function.cpp moc_inputmap.cpp moc_inputpatch.cpp moc_mastertimer.cpp moc_outputmap.cpp moc_outputpatch.cpp moc_scene.cpp moc_qlcinplugin.cpp moc_qlcoutplugin.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_bus.cpp moc_chaser.cpp moc_chaserrunner.cpp moc_collection.cpp moc_doc.cpp moc_efx.cpp moc_fixture.cpp moc_function.cpp moc_inputmap.cpp moc_inputpatch.cpp moc_mastertimer.cpp moc_outputmap.cpp moc_outputpatch.cpp moc_scene.cpp moc_qlcinplugin.cpp moc_qlcoutplugin.cpp
moc_bus.cpp: bus.h
	/usr/bin/moc $(DEFINES) $(INCPATH) bus.h -o moc_bus.cpp

moc_chaser.cpp: function.h \
		chaser.h
	/usr/bin/moc $(DEFINES) $(INCPATH) chaser.h -o moc_chaser.cpp

moc_chaserrunner.cpp: function.h \
		chaserrunner.h
	/usr/bin/moc $(DEFINES) $(INCPATH) chaserrunner.h -o moc_chaserrunner.cpp

moc_collection.cpp: function.h \
		collection.h
	/usr/bin/moc $(DEFINES) $(INCPATH) collection.h -o moc_collection.cpp

moc_doc.cpp: function.h \
		fixture.h \
		qlcchannel.h \
		bus.h \
		doc.h
	/usr/bin/moc $(DEFINES) $(INCPATH) doc.h -o moc_doc.cpp

moc_efx.cpp: efxfixture.h \
		function.h \
		efx.h
	/usr/bin/moc $(DEFINES) $(INCPATH) efx.h -o moc_efx.cpp

moc_fixture.cpp: qlcchannel.h \
		fixture.h
	/usr/bin/moc $(DEFINES) $(INCPATH) fixture.h -o moc_fixture.cpp

moc_function.cpp: function.h
	/usr/bin/moc $(DEFINES) $(INCPATH) function.h -o moc_function.cpp

moc_inputmap.cpp: qlcinputprofile.h \
		inputmap.h
	/usr/bin/moc $(DEFINES) $(INCPATH) inputmap.h -o moc_inputmap.cpp

moc_inputpatch.cpp: qlcinputprofile.h \
		inputpatch.h
	/usr/bin/moc $(DEFINES) $(INCPATH) inputpatch.h -o moc_inputpatch.cpp

moc_mastertimer.cpp: mastertimer.h
	/usr/bin/moc $(DEFINES) $(INCPATH) mastertimer.h -o moc_mastertimer.cpp

moc_outputmap.cpp: outputmap.h
	/usr/bin/moc $(DEFINES) $(INCPATH) outputmap.h -o moc_outputmap.cpp

moc_outputpatch.cpp: outputpatch.h
	/usr/bin/moc $(DEFINES) $(INCPATH) outputpatch.h -o moc_outputpatch.cpp

moc_scene.cpp: fadechannel.h \
		qlcchannel.h \
		scenevalue.h \
		fixture.h \
		dmxsource.h \
		function.h \
		scene.h
	/usr/bin/moc $(DEFINES) $(INCPATH) scene.h -o moc_scene.cpp

moc_qlcinplugin.cpp: ../../plugins/interfaces/qlctypes.h \
		../../plugins/interfaces/qlcinplugin.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../../plugins/interfaces/qlcinplugin.h -o moc_qlcinplugin.cpp

moc_qlcoutplugin.cpp: ../../plugins/interfaces/qlctypes.h \
		../../plugins/interfaces/qlcoutplugin.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../../plugins/interfaces/qlcoutplugin.h -o moc_qlcoutplugin.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

qlccapability.o: qlccapability.cpp qlccapability.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qlccapability.o qlccapability.cpp

qlcchannel.o: qlcchannel.cpp qlcchannel.h \
		qlccapability.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qlcchannel.o qlcchannel.cpp

qlcfile.o: qlcfile.cpp qlcconfig.h \
		qlcfile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qlcfile.o qlcfile.cpp

qlcfixturedef.o: qlcfixturedef.cpp qlcfixturemode.h \
		qlcfixturedef.h \
		qlcphysical.h \
		qlcchannel.h \
		qlccapability.h \
		qlcfile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qlcfixturedef.o qlcfixturedef.cpp

qlcfixturedefcache.o: qlcfixturedefcache.cpp qlcfixturedefcache.h \
		qlcfixturedef.h \
		qlcconfig.h \
		qlcfile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qlcfixturedefcache.o qlcfixturedefcache.cpp

qlcfixturemode.o: qlcfixturemode.cpp qlcfixturemode.h \
		qlcfixturedef.h \
		qlcphysical.h \
		qlcchannel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qlcfixturemode.o qlcfixturemode.cpp

qlci18n.o: qlci18n.cpp qlcconfig.h \
		qlci18n.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qlci18n.o qlci18n.cpp

qlcinputchannel.o: qlcinputchannel.cpp qlcinputchannel.h \
		qlcinputprofile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qlcinputchannel.o qlcinputchannel.cpp

qlcinputprofile.o: qlcinputprofile.cpp qlcinputchannel.h \
		qlcinputprofile.h \
		qlcfile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qlcinputprofile.o qlcinputprofile.cpp

qlcphysical.o: qlcphysical.cpp qlcphysical.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qlcphysical.o qlcphysical.cpp

bus.o: bus.cpp bus.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bus.o bus.cpp

chaser.o: chaser.cpp qlcfixturedef.h \
		qlcfile.h \
		universearray.h \
		qlcchannel.h \
		chaserrunner.h \
		function.h \
		mastertimer.h \
		fixture.h \
		chaser.h \
		scene.h \
		fadechannel.h \
		scenevalue.h \
		dmxsource.h \
		doc.h \
		bus.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o chaser.o chaser.cpp

chaserrunner.o: chaserrunner.cpp universearray.h \
		qlcchannel.h \
		chaserrunner.h \
		function.h \
		fadechannel.h \
		fixture.h \
		scene.h \
		scenevalue.h \
		dmxsource.h \
		doc.h \
		bus.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o chaserrunner.o chaserrunner.cpp

collection.o: collection.cpp qlcfile.h \
		universearray.h \
		qlcchannel.h \
		mastertimer.h \
		collection.h \
		function.h \
		doc.h \
		fixture.h \
		bus.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o collection.o collection.cpp

doc.o: doc.cpp qlcfixturedefcache.h \
		qlcfixturemode.h \
		qlcfixturedef.h \
		qlcphysical.h \
		qlcchannel.h \
		qlcfile.h \
		collection.h \
		function.h \
		fixture.h \
		chaser.h \
		scene.h \
		fadechannel.h \
		scenevalue.h \
		dmxsource.h \
		efx.h \
		efxfixture.h \
		doc.h \
		bus.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o doc.o doc.cpp

efx.o: efx.cpp qlcfixturemode.h \
		qlcfixturedef.h \
		qlcphysical.h \
		qlcchannel.h \
		qlcfile.h \
		universearray.h \
		mastertimer.h \
		fixture.h \
		scene.h \
		fadechannel.h \
		scenevalue.h \
		dmxsource.h \
		function.h \
		doc.h \
		bus.h \
		efx.h \
		efxfixture.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o efx.o efx.cpp

efxfixture.o: efxfixture.cpp universearray.h \
		qlcchannel.h \
		efxfixture.h \
		function.h \
		scene.h \
		fadechannel.h \
		scenevalue.h \
		fixture.h \
		dmxsource.h \
		efx.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o efxfixture.o efxfixture.cpp

fadechannel.o: fadechannel.cpp fadechannel.h \
		qlcchannel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fadechannel.o fadechannel.cpp

fixture.o: fixture.cpp qlcfixturedefcache.h \
		qlcfixturemode.h \
		qlcfixturedef.h \
		qlcphysical.h \
		qlcchannel.h \
		qlccapability.h \
		fixture.h \
		doc.h \
		function.h \
		bus.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fixture.o fixture.cpp

function.o: function.cpp qlcfile.h \
		mastertimer.h \
		collection.h \
		function.h \
		chaser.h \
		scene.h \
		fadechannel.h \
		qlcchannel.h \
		scenevalue.h \
		fixture.h \
		dmxsource.h \
		efx.h \
		efxfixture.h \
		bus.h \
		doc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o function.o function.cpp

inputmap.o: inputmap.cpp qlcinputchannel.h \
		qlcconfig.h \
		qlcfile.h \
		qlci18n.h \
		inputpatch.h \
		qlcinputprofile.h \
		inputmap.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o inputmap.o inputmap.cpp

inputpatch.o: inputpatch.cpp inputpatch.h \
		qlcinputprofile.h \
		inputmap.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o inputpatch.o inputpatch.cpp

intensitygenerator.o: intensitygenerator.cpp qlccapability.h \
		qlcchannel.h \
		intensitygenerator.h \
		fixture.h \
		chaser.h \
		function.h \
		scene.h \
		fadechannel.h \
		scenevalue.h \
		dmxsource.h \
		doc.h \
		bus.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o intensitygenerator.o intensitygenerator.cpp

mastertimer.o: mastertimer.cpp universearray.h \
		qlcchannel.h \
		mastertimer.h \
		outputmap.h \
		dmxsource.h \
		function.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mastertimer.o mastertimer.cpp

universearray.o: universearray.cpp universearray.h \
		qlcchannel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o universearray.o universearray.cpp

outputmap.o: outputmap.cpp qlcconfig.h \
		qlci18n.h \
		qlcfile.h \
		universearray.h \
		qlcchannel.h \
		outputpatch.h \
		outputmap.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o outputmap.o outputmap.cpp

outputpatch.o: outputpatch.cpp outputpatch.h \
		outputmap.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o outputpatch.o outputpatch.cpp

palettegenerator.o: palettegenerator.cpp qlccapability.h \
		qlcchannel.h \
		palettegenerator.h \
		fixture.h \
		scene.h \
		fadechannel.h \
		scenevalue.h \
		dmxsource.h \
		function.h \
		doc.h \
		bus.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o palettegenerator.o palettegenerator.cpp

scene.o: scene.cpp qlcfixturedef.h \
		qlcfile.h \
		universearray.h \
		qlcchannel.h \
		mastertimer.h \
		scene.h \
		fadechannel.h \
		scenevalue.h \
		fixture.h \
		dmxsource.h \
		function.h \
		doc.h \
		bus.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o scene.o scene.cpp

scenevalue.o: scenevalue.cpp scenevalue.h \
		fixture.h \
		qlcchannel.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o scenevalue.o scenevalue.cpp

moc_bus.o: moc_bus.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_bus.o moc_bus.cpp

moc_chaser.o: moc_chaser.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_chaser.o moc_chaser.cpp

moc_chaserrunner.o: moc_chaserrunner.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_chaserrunner.o moc_chaserrunner.cpp

moc_collection.o: moc_collection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_collection.o moc_collection.cpp

moc_doc.o: moc_doc.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_doc.o moc_doc.cpp

moc_efx.o: moc_efx.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_efx.o moc_efx.cpp

moc_fixture.o: moc_fixture.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fixture.o moc_fixture.cpp

moc_function.o: moc_function.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_function.o moc_function.cpp

moc_inputmap.o: moc_inputmap.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_inputmap.o moc_inputmap.cpp

moc_inputpatch.o: moc_inputpatch.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_inputpatch.o moc_inputpatch.cpp

moc_mastertimer.o: moc_mastertimer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mastertimer.o moc_mastertimer.cpp

moc_outputmap.o: moc_outputmap.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_outputmap.o moc_outputmap.cpp

moc_outputpatch.o: moc_outputpatch.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_outputpatch.o moc_outputpatch.cpp

moc_scene.o: moc_scene.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_scene.o moc_scene.cpp

moc_qlcinplugin.o: moc_qlcinplugin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_qlcinplugin.o moc_qlcinplugin.cpp

moc_qlcoutplugin.o: moc_qlcoutplugin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_qlcoutplugin.o moc_qlcoutplugin.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/lib/ || $(MKDIR) $(INSTALL_ROOT)/usr/lib/ 
	-$(INSTALL_PROGRAM) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET)"
	-$(STRIP) --strip-unneeded "$(INSTALL_ROOT)/usr/lib/$(TARGET)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET0)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET1)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/lib/$(TARGET2)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET0)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET1)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/$(TARGET2)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/lib/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

